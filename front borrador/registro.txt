import React, { useState } from 'react';
import { TextField, Button, Typography, Box, Container, CssBaseline, Avatar, CircularProgress } from '@mui/material';
import { styled } from '@mui/system';
import MailOutlineIcon from '@mui/icons-material/MailOutline';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import PersonOutlineIcon from '@mui/icons-material/PersonOutline';
import { ThemeProvider, createTheme } from '@mui/material/styles';

// Crear un tema personalizado
const theme = createTheme({
  palette: {
    background: {
      default: '#cfd8dc', // Color de fondo de la página
    },
  },
});

const IconTextField = styled(TextField)({
  '& .MuiInputLabel-outlined': {
    fontSize: '1rem',
  },
  '& .MuiOutlinedInput-input': {
    fontSize: '1rem',
    backgroundColor: '#f5f5f5', // Color de fondo de los campos de entrada
  },
  '& .MuiSvgIcon-root': {
    fontSize: '1.5rem',
  },
  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {
    borderColor: '#f5f5f5', // Color del borde cuando el campo está enfocado
  },
});

function Register() {
  const [profileImage, setProfileImage] = useState(null);
  const [loading, setLoading] = useState(false);

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    setProfileImage(file);
  };

  const handleUpload = () => {
    setLoading(true);
    // Simular carga de imagen (aquí puedes agregar la lógica real de carga de imagen)
    setTimeout(() => {
      setLoading(false);
      // Lógica adicional después de cargar la imagen
    }, 2000);
  };

  return (
    <ThemeProvider theme={theme}>
      <Container component="main" maxWidth="xs" sx={{ bgcolor: '#f5f5f5', py: 5, borderRadius: 2, my: 8, boxShadow: 3 }}>
        <CssBaseline />
        <Box sx={{ display: 'flex', flexDirection: 'column', margin: 'auto', mt: 5, gap: 2 }}>
          <Typography variant="h5" align="center" gutterBottom>
            Registro
          </Typography>
          <IconTextField
            label="Nombre"
            required
            InputProps={{
              startAdornment: <PersonOutlineIcon color="action" />,
            }}
          />
          <IconTextField
            label="Apellido"
            required
            InputProps={{
              startAdornment: <PersonOutlineIcon color="action" />,
            }}
          />
          <IconTextField
            label="Correo Electrónico"
            type="email"
            required
            InputProps={{
              startAdornment: <MailOutlineIcon color="action" />,
            }}
          />
          <IconTextField
            label="Contraseña"
            type="password"
            required
            InputProps={{
              startAdornment: <LockOutlinedIcon color="action" />,
            }}
          />
          <IconTextField
            label="Confirmar Contraseña"
            type="password"
            required
            InputProps={{
              startAdornment: <LockOutlinedIcon color="action" />,
            }}
          />
         
          <Box sx={{ display: 'flex', alignItems: 'center', gap: '10px', mt: 3 }}>
            <label htmlFor="profile-image-input">
              <input
                type="file"
                id="profile-image-input"
                accept="image/*"
                style={{ display: 'none' }}
                onChange={handleImageChange}
              />
              <Button variant="outlined" component="span">
                Cargar Foto de Perfil
              </Button>
            </label>
            {profileImage && (
              <>
                <Avatar
                  alt="Profile Image"
                  src={URL.createObjectURL(profileImage)}
                  sx={{ width: 40, height: 40, fontSize: '1.5rem' }}
                />
                <Button variant="contained" color="primary" onClick={handleUpload} disabled={loading}>
                  {loading ? <CircularProgress size={24} /> : 'Registrarse'}
                </Button>
              </>
            )}
          </Box>
          {loading && (
            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>
              <CircularProgress />
            </Box>
          )}
        </Box>
        <Typography variant="body2" align="justify" sx={{ mt: 2, color: '#777' }}>
          Se recomienda a los usuarios que utilicen contraseñas seguras que combinen letras, números y caracteres especiales para garantizar la seguridad de sus cuentas.
        </Typography>
      </Container>
    </ThemeProvider>
  );
}

export default Register;
